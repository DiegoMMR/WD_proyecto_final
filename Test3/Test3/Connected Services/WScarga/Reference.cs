//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test3.WScarga {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WScarga.BDSoap")]
    public interface BDSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CargarData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        System.Data.DataTable CargarData(string query, string[] parameter, object[] values, string table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CargarData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> CargarDataAsync(string query, string[] parameter, object[] values, string table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarPaciente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void AgregarPaciente(int CodPaciente, string Nombre, string FechaNac, int Telefono, string Fechacover, float Monto, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarPaciente", ReplyAction="*")]
        System.Threading.Tasks.Task AgregarPacienteAsync(int CodPaciente, string Nombre, string FechaNac, int Telefono, string Fechacover, float Monto, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BorrarPaciente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void BorrarPaciente(int CodPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BorrarPaciente", ReplyAction="*")]
        System.Threading.Tasks.Task BorrarPacienteAsync(int CodPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizaPaciente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void ActualizaPaciente(int CodPaciente, string Nombre, string FechaNac, int Telefono, string Fechacover, float Monto, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizaPaciente", ReplyAction="*")]
        System.Threading.Tasks.Task ActualizaPacienteAsync(int CodPaciente, string Nombre, string FechaNac, int Telefono, string Fechacover, float Monto, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarProv", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void AgregarProv(int NIT, string Razonsocial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarProv", ReplyAction="*")]
        System.Threading.Tasks.Task AgregarProvAsync(int NIT, string Razonsocial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BorrarProv", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void BorrarProv(string NIT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BorrarProv", ReplyAction="*")]
        System.Threading.Tasks.Task BorrarProvAsync(string NIT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarProv", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void ActualizarProv(int NIT, string Razonsocial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarProv", ReplyAction="*")]
        System.Threading.Tasks.Task ActualizarProvAsync(int NIT, string Razonsocial);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BDSoapChannel : Test3.WScarga.BDSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BDSoapClient : System.ServiceModel.ClientBase<Test3.WScarga.BDSoap>, Test3.WScarga.BDSoap {
        
        public BDSoapClient() {
        }
        
        public BDSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BDSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BDSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BDSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public System.Data.DataTable CargarData(string query, string[] parameter, object[] values, string table) {
            return base.Channel.CargarData(query, parameter, values, table);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CargarDataAsync(string query, string[] parameter, object[] values, string table) {
            return base.Channel.CargarDataAsync(query, parameter, values, table);
        }
        
        public void AgregarPaciente(int CodPaciente, string Nombre, string FechaNac, int Telefono, string Fechacover, float Monto, string Status) {
            base.Channel.AgregarPaciente(CodPaciente, Nombre, FechaNac, Telefono, Fechacover, Monto, Status);
        }
        
        public System.Threading.Tasks.Task AgregarPacienteAsync(int CodPaciente, string Nombre, string FechaNac, int Telefono, string Fechacover, float Monto, string Status) {
            return base.Channel.AgregarPacienteAsync(CodPaciente, Nombre, FechaNac, Telefono, Fechacover, Monto, Status);
        }
        
        public void BorrarPaciente(int CodPaciente) {
            base.Channel.BorrarPaciente(CodPaciente);
        }
        
        public System.Threading.Tasks.Task BorrarPacienteAsync(int CodPaciente) {
            return base.Channel.BorrarPacienteAsync(CodPaciente);
        }
        
        public void ActualizaPaciente(int CodPaciente, string Nombre, string FechaNac, int Telefono, string Fechacover, float Monto, string Status) {
            base.Channel.ActualizaPaciente(CodPaciente, Nombre, FechaNac, Telefono, Fechacover, Monto, Status);
        }
        
        public System.Threading.Tasks.Task ActualizaPacienteAsync(int CodPaciente, string Nombre, string FechaNac, int Telefono, string Fechacover, float Monto, string Status) {
            return base.Channel.ActualizaPacienteAsync(CodPaciente, Nombre, FechaNac, Telefono, Fechacover, Monto, Status);
        }
        
        public void AgregarProv(int NIT, string Razonsocial) {
            base.Channel.AgregarProv(NIT, Razonsocial);
        }
        
        public System.Threading.Tasks.Task AgregarProvAsync(int NIT, string Razonsocial) {
            return base.Channel.AgregarProvAsync(NIT, Razonsocial);
        }
        
        public void BorrarProv(string NIT) {
            base.Channel.BorrarProv(NIT);
        }
        
        public System.Threading.Tasks.Task BorrarProvAsync(string NIT) {
            return base.Channel.BorrarProvAsync(NIT);
        }
        
        public void ActualizarProv(int NIT, string Razonsocial) {
            base.Channel.ActualizarProv(NIT, Razonsocial);
        }
        
        public System.Threading.Tasks.Task ActualizarProvAsync(int NIT, string Razonsocial) {
            return base.Channel.ActualizarProvAsync(NIT, Razonsocial);
        }
    }
}
